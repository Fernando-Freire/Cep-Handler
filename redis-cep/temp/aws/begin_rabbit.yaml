apiVersion: v1
kind: Service
metadata:
  name: rabbitmq-cep-svc
spec:
  ports:
  - port: 5672  
  selector:
    app: rabbitmq-cep-app
#  clusterIP: None
---
apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: rabbitmq-cep-dep
spec:
  selector:
    matchLabels:
      app: rabbitmq-cep-app
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: rabbitmq-cep-app
    spec:
      containers:
      - image: fernandofreire/rabbitmq-cep:latest
        name: rabbitmq-cep
        ports:
        - containerPort: 5672
          name: rabbitmq-cep
#Users now can and should instead use the storageClassName field of the PersistentVolumeClaim object.
#The value of this field must match the name of a StorageClass configured by the administrator
---
apiVersion: v1
kind: Service
metadata:
  name: redis-cep-svc
spec:
  ports:
  - port: 6379
  selector:
    app: redis-cep-app
#  clusterIP: None
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-cep-pvc
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: gp2
  resources:
    requests:
      storage: 3Gi
---
apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: redis-cep-dep
spec:
  selector:
    matchLabels:
      app: redis-cep-app
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: redis-cep-app
    spec:
      containers:
      - image: fernandofreire/redis-cep:basic
        name: redis-cep
        ports:
        - containerPort: 6379
          name: redis-cep
        volumeMounts:
        - name: redis-cep-ps
          mountPath: /data/data/
      volumes:
      - name: redis-cep-ps
        persistentVolumeClaim:
          claimName: redis-cep-pvc
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cep-worker-sa
  namespace: default
automountServiceAccountToken: true
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cep-worker-role
  namespace: default
rules:
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
# This cluster role binding allows anyone in the "manager" group to read secrets in any namespace.
kind: ClusterRoleBinding
metadata:
  namespace: default
  name: cep-worker-crb
subjects:
- kind: ServiceAccount
  name: cep-worker-sa
  namespace: default
roleRef:
  kind: ClusterRole
  name: cep-worker-role
  apiGroup: rbac.authorization.k8s.io
